@startuml
'https://plantuml.com/class-diagram

class Juego {
    - partidaActual
    - partidasGuardadas

    + cargarPartida()
    + jugar()
}

class Partida {
    - jugadorUno
    - jugadorDos
    - mapa
    - turno

    + asignarNombre(Jugador)
    + asignarColor(Jugador)
    + asignarRaza(Jugador)
    + jugar()
    + . . .  ()
}

class Jugador {
    - nombre
    - color
    - raza


    + contruir()
    + atacar()
    + recolectar()
    + evolucionar()
}

abstract class Raza {
    - unidades
    - construcciones
    - bandoDeRecursos

    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

class Zerg {
    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

class Protoss {
    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

interface Unidad {
    + construir()
}
interface Unidad
note right: Nose como segregar las interfaces, si guiarme por el ataque de cada unidad o por como se mueven en el mapa

interface Tierra {
    + ataqueTierra()
}

interface Aire {
    + ataqueAire()
}

class Zangano {
    - vida
    - tiempoConstruccion
}

class Zerling {
    - vida
    - tiempoConstruccion

    + ataqueTierra()
}

class Hidralisco {
    - vida
    - tiempoConstruccion

    +ataqueTierra()
    +ataqueAire()
}

class Mutalisco {
    - vida
    - tiempoConstruccion

    +ataqueTierra()
    +ataqueAire()
}

class Guardian {
    - vida
    - tiempoConstruccion

    +ataqueTierra()
}

class Zealot {
    - vida
    - escudo
    - tiempoConstruccion

    +ataqueTierra()
}

class Dragon {
    - vida
    - escudo
    - tiempoConstruccion

    +ataqueTierra()
    +ataqueAire()
}

class Scout {
    - vida
    - escudo
    - tiempoConstruccion

    +ataqueTierra()
    +ataqueAire()

}

interface Construccion {
    +{abstract}construir():void
    +{abstract}avanzarTurno():void

}

interface RefineriaGas {
    + {abstract}recolectar(volcan)
}

interface RefineriaMineral {
    + {abstract}recolectar(nodoMineral)
}


interface ConstruccionConRadio {
    +{abstract}ampliarRadio()
}

interface ConstruccionNormal {

    +{abstract}evolucionar()
    }

class Extractor {
    - tiempoConstruccion
    - vida
    +recolectar()
    +construir()
}

class Asimilador {
    - tiempoConstruccion
    - vida
    +recolectar()
    +construir()
    - escudo
}

class NexoMineral {
    - tiempoConstruccion
    - vida
    +recolectar()
    +construir()
    - escudo
}

class Criadero {
    - tiempoConstruccion
    - vida
     +evolucionar()
     +construir()
     +ampliarRadio()
}

class Pilon {
    - tiempoConstruccion
    - vida
    +ampliarRadio()
    +construir()
    - escudo
}

class Espiral {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()

}

class ReservaProduccion {
    - tiempoConstruccion
    - vida
     +evolucionar()
     +construir()
}

class Guarida {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()

}

class PuertoEstelar {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()
    - escudo

}

class Acceso {
    - tiempoConstruccion
    - vida
     +evolucionar()
     +construir()
    - escudo
}

class Mapa {
    - mapa: [][]

    + agregarUnidad()
    + agregarConstruccion()
}

abstract class Casilla {
    - unidad
    - terreno
    - construccion

    + agregarUnidad()
    + agregarConstruccion()
    + setTerrreno()
}

class Vacia {
    + agregarUnidad()
    + agregarConstruccion()
    + setTerreno()
}

class ConVolcan {
    - volcan

    + agregarUnidad()
    + agregarConstruccion()
    + setTerreno()
}

class ConNodoMineral {
    - nodo

    + agregarUnidad()
    + agregarConstruccion()
}

interface Terreno {
    + agregarConstruccion()
}

interface Terreno
note left: Se aplica patrÃ³n Strategy

class ConMoho {
    + agregarConstruccion()
}

class ConEnergia {
    + agregarConstruccion()
}

class SinNada {
    + agregarConstruccion()
}

class Volcan {
    - cantidad
    + recolectar() : int
}

class NodoMineral {
    - cantidad
    + recolectar() : int
}

class Turno {

   +avanzarTurno(Jugador)
   +jugar(Jugador)

   }



Juego *---> Partida
Partida "2" *-> Jugador
Mapa <-* Partida
Partida *--> Turno

Jugador *-> Raza
Raza <|-up- Zerg
Raza <|-up- Protoss

Raza -> Unidad

Unidad <|.. Tierra
Unidad <|.. Aire
Unidad <|.. Zangano
Tierra <|.. Zerling
Tierra <|.. Hidralisco
Tierra <|.. Mutalisco
Tierra <|.. Guardian
Tierra <|.. Zealot
Tierra <|.. Dragon
Tierra <|.. Scout
Aire <|.. Hidralisco
Aire <|.. Mutalisco
Aire <|.. Dragon
Aire <|.. Scout

Raza-->Construccion


Construccion <|.. RefineriaGas
Construccion <|.. RefineriaMineral
Construccion <|.. ConstruccionConRadio
Construccion <|.. ConstruccionNormal


RefineriaGas <|.. Extractor
RefineriaGas <|.. Asimilador
RefineriaMineral <|.. NexoMineral


ConstruccionConRadio <|.. Criadero
ConstruccionConRadio <|.. Pilon


ConstruccionNormal <|.. Criadero
ConstruccionNormal <|.. Espiral
ConstruccionNormal <|.. ReservaProduccion
ConstruccionNormal <|.. Guarida
ConstruccionNormal <|.. PuertoEstelar
ConstruccionNormal <|.. Acceso


Casilla "*" <-* Mapa
Terreno <-* Casilla
Casilla <|-- Vacia
Casilla <|-- ConVolcan
Casilla <|-- ConNodoMineral
Terreno <|.. ConMoho
Terreno <|... ConEnergia
Terreno <|.. SinNada


ConVolcan --> Volcan
ConNodoMineral --> NodoMineral




@enduml