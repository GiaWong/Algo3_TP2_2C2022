@startuml
'https://plantuml.com/class-diagram

class Juego {
    - partidaActual
    - partidasGuardadas

    + cargarPartida()
    + jugar()
}

class Partida {
    - jugadorUno
    - jugadorDos
    - mapa
    - turno

    + asignarNombre(Jugador)
    + asignarColor(Jugador)
    + asignarRaza(Jugador)
    + jugar()
    + . . .  ()
}

class Jugador {
    - nombre
    - color
    - raza


    + contruir()
    + atacar()
    + recolectar()
    + evolucionar()
}

abstract class Raza {
    - unidades
    - construcciones
    - bancoDeRecursos

    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

class Zerg {
    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

class Protoss {
    + agregarConstruccion()
    + recolectar()
    + evolucionar()
}

abstract class Unidad {
    - vida
    - tiempoConstruccion
    - rango
    - costos
    + construir()
    + ataque(Superficie, fila, columna)

    -superfficie: Aire o Tierra
}

class Zangano {
    - vida
    - tiempoConstruccion
    + recolectar()
}

class Zerling {
    + ataqueTierra()
}

class Hidralisco {

    +ataqueTierra()
    +ataqueAire()
}

class Mutalisco {
    +evoluciona()
    +ataque(Tierra)
    +ataque(Aire)
}

class Guardian {
    -vida
    -tiempoConstruccion

    +ataque(Tierra)
}

class Zealot {
    - escudo

    +ataque(Tierra)
}

class Dragon {
    - escudo

    +ataque(Tierra)
}

class Scout {
    - escudo

   +ataque(Tierra)

}

interface Construccion {
    +{abstract}construir():void
    +{abstract}avanzarTurno():void

}

interface RefineriaGas {
    + {abstract}recolectar(volcan)
}

interface RefineriaMineral {
    + {abstract}recolectar(nodoMineral)
}


interface ConstruccionConRadio {
    +{abstract}ampliarRadio()
}

interface ConstruccionNormal {

    +{abstract}evolucionar()
    }

class Extractor {
    - tiempoConstruccion
    - vida
    +recolectar(volcan)
    +construir()
    +agregar(Zangano)
}

class Asimilador {
    - tiempoConstruccion
    - vida
    +recolectar(volcan)
    +construir()
    - escudo
}

class NexoMineral {
    - tiempoConstruccion
    - vida
    +recolectar(nodoMineral)
    +construir()
    - escudo
}

class Criadero {
    - tiempoConstruccion:int
    - vida:int
    - larva: int
     +evolucionar()
     +construir()
     +ampliarRadio()
}

class Pilon {
    - tiempoConstruccion
    - vida
    +ampliarRadio()
    +construir()
    - escudo
}

class Espiral {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()

}

class ReservaProduccion {
    - tiempoConstruccion
    - vida
     +evolucionar()
     +construir()
}

class Guarida {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()

}

class PuertoEstelar {
    - tiempoConstruccion
    - vida
    +evolucionar()
    +construir()
    - escudo

}

class Acceso {
    - tiempoConstruccion
    - vida
     +evolucionar()
     +construir()
    - escudo
}

class Mapa {
    - mapa: [][]

    + agregarUnidad()
    + agregarConstruccion()
}

class Casilla {
    - unidad
    - recurso
    - terreno
    - construccion

    + agregarUnidad()
    + agregarConstruccion()
    + setTerrreno()
    + setRecurso()
}

class Vacio {
    + esPosibleConstruir(construccion)
}

interface Terreno {
    + esPosibleConstruir(construccion)
}

interface Terreno
note left: Se aplica patrÃ³n Strategy

class ConMoho {
    + esPosibleConstruir(construccion)
}

class ConEnergia {
    + esPosibleConstruir(construccion)
}

class SinNada {
    + esPosibleConstruir(construccion)
}

class Volcan {
    - cantidad
    + recolectar() : int
    + esPosibleConstruir(construccion)
}

class NodoMineral {
    - cantidad
    + recolectar() : int
    + esPosibleConstruir(construccion)
}

class Turno {

   +avanzarTurno(Jugador)
   +jugar(Jugador)

   }

interface Recurso {
    + esPosibleConstruir(construccion)
}



Juego *---> Partida
Partida "2" *-> Jugador
Mapa <-* Partida
Partida *--> Turno

Jugador *-> Raza
Raza <|-up- Zerg
Raza <|-up- Protoss


Raza-->Construccion


Construccion <|.. RefineriaGas
Construccion <|.. RefineriaMineral
Construccion <|.. ConstruccionConRadio
Construccion <|.. ConstruccionNormal


RefineriaGas <|.. Extractor
RefineriaGas <|.. Asimilador
RefineriaMineral <|.. NexoMineral


ConstruccionConRadio <|.. Criadero
ConstruccionConRadio <|.. Pilon


ConstruccionNormal <|.. Criadero
ConstruccionNormal <|.. Espiral
ConstruccionNormal <|.. ReservaProduccion
ConstruccionNormal <|.. Guarida
ConstruccionNormal <|.. PuertoEstelar
ConstruccionNormal <|.. Acceso


Casilla "*" <-* Mapa
Terreno <-* Casilla

Casilla *--> Recurso
Recurso <|.. Volcan
Recurso <|.. NodoMineral
Recurso <|.. Vacio

Terreno <|.. ConMoho
Terreno <|... ConEnergia
Terreno <|.. SinNada


Criadero --> Zangano: construye/crea
ReservaProduccion --> Zerling: construye/crea
Guarida --> Hidralisco: construye/crea


Espiral --> Mutalisco: construye/crea
Mutalisco --> Guardian: evoluciona
Acceso --> Zealot: construye/crea
Acceso --> Dragon: construye/crea
PuertoEstelar --> Scout: construye/crea

Espiral o-left-> Guarida: preRequisito
Guarida o-left-> ReservaProduccion: preRequisito
PuertoEstelar o-left-> Acceso: preRequisito

Zangano --|> Unidad
Zerling --|> Unidad
Hidralisco --|> Unidad
Mutalisco --|> Unidad
Zealot --|> Unidad
Dragon --|> Unidad
Scout --|> Unidad

interface Superficie{

}


class Aire{

}

class Tierra{

}



Superficie <|.. Tierra
Superficie <|.. Aire

Unidad o--> Superficie




@enduml